format_version: 5
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - STEP_VERSION: 2.1.0

  # define these in your .bitrise.secrets.yml
  - TEST_AUTH_TOKEN: "$TEST_AUTH_TOKEN"
  - TEST_REPOSITORY_URL: $TEST_REPOSITORY_URL
  - TEST_GIT_COMMIT: $TEST_GIT_COMMIT
  - TEST_BUILD_URL: $TEST_BUILD_URL
  - STEP_ID_IN_STEPLIB: github-status

workflows:
  # ----------------------------------------------------------------
  # --- workflow to Step Test
  ci:
    test:
    before_run:
    - audit-this-step
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    after_run:
    - _test_invalid
    - _test_success
    - _test_failed
    - _test_no_commit_hash

  _test_success:
    steps:
    - path::./:
        title: Test success status
        is_skippable: false
        inputs:
        - auth_token: "$TEST_AUTH_TOKEN"
        - repository_url: "$TEST_REPOSITORY_URL"
        - commit_hash: "$TEST_GIT_COMMIT"
        - build_url: $TEST_BUILD_URL
        - verbose: "yes"

  _test_invalid:
    steps:
    - path::./:
        title: Test invalid commit hash
        inputs:
        - auth_token: "$TEST_AUTH_TOKEN"
        - repository_url: "$TEST_REPOSITORY_URL"
        - commit_hash: "invalid"
        - build_url: $TEST_BUILD_URL

  _test_failed:
    steps:
    - path::./:
        title: Test failed status
        inputs:
        - auth_token: "$TEST_AUTH_TOKEN"
        - repository_url: "$TEST_REPOSITORY_URL"
        - commit_hash: "$TEST_GIT_COMMIT"
        - set_specific_status: failure
        - build_url: $TEST_BUILD_URL

  _test_no_commit_hash:
    steps:
    - path::./:
        title: Test no commit hash specified
        inputs:
        - auth_token: "$TEST_AUTH_TOKEN"
        - repository_url: "$TEST_REPOSITORY_URL"
        - commit_hash:
        - build_url: $TEST_BUILD_URL

  go-tests:
    before_run:
    - _install-test-tools
    steps:
    - script:
        title: Export go files to test
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            no_vendor_paths="$(go list ./... | grep -v vendor)"
            envman add --key GOLIST_WITHOUT_VENDOR --value "$no_vendor_paths"
    - script:
        title: Err check
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            errcheck -asserts=true -blank=true $GOLIST_WITHOUT_VENDOR
    - script:
        title: Go lint
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            while read -r line; do
              echo "-> Linting: $line"
              golint_out="$(golint $line)"
              if [[ "${golint_out}" != "" ]] ; then
                echo "=> Golint issues found:"
                echo "${golint_out}"
                exit 1
              fi
            done <<< "$GOLIST_WITHOUT_VENDOR"
    - script:
        title: Go test
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            go test ./...

  _install-test-tools:
    steps:
    - script:
        title: Install required testing tools
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            # Check for unhandled errors
            go get -u -v github.com/kisielk/errcheck

            # Go lint
            go get -u -v github.com/golang/lint/golint

  # ----------------------------------------------------------------
  # --- Utility workflows
  dep-update:
    title: Dep update
    description: |
      Used for updating bitrise dependencies with dep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -v
            dep ensure -v -update

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            stepman audit --step-yml ./step.yml
